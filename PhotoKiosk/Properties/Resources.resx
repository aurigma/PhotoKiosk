<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MessageBurningError" xml:space="preserve">
    <value>Unable to burn photos to disc.
The problem description is logged. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
  <data name="MessageConfigReadingError" xml:space="preserve">
    <value>Unable to read Photo Kiosk configuration. 
The problem description is logged. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
  <data name="MessageDriveIsNotReady" xml:space="preserve">
    <value>The drive reported that it is in the process of becoming ready. Please try the request again later.</value>
  </data>
  <data name="MessageImageLoadError" xml:space="preserve">
    <value>Unable to load image {0}.
{1}</value>
  </data>
  <data name="MessageCropsReadingError" xml:space="preserve">
    <value>Unable to read crops file. 
The problem description is logged. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
  <data name="MessagePriceReadingError" xml:space="preserve">
    <value>Unable to read price file. 
The problem description is logged. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
  <data name="MessageResourceReadingError" xml:space="preserve">
    <value>Unable to read localization file. 
The problem description is logged. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
  <data name="MessageMediaIsReadOnly" xml:space="preserve">
    <value>The drive reported that the media is write protected.</value>
  </data>
  <data name="MessageMediaUpsideDown" xml:space="preserve">
    <value>The media is inserted upside down.</value>
  </data>
  <data name="MessageNoMedia" xml:space="preserve">
    <value>There is no media in the device.</value>
  </data>
  <data name="MessageOnlyOneInstanceCanBeRun" xml:space="preserve">
    <value>Another instance of Photo Kiosk is already running.</value>
  </data>
  <data name="MessageReceiptPrinterError" xml:space="preserve">
    <value>Unable to print a receipt.
The problem description is logged. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
  <data name="MessagePhotoPrinterError" xml:space="preserve">
    <value>Unable to print photos.
The problem description is logged. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
  <data name="MessageRunProcessError" xml:space="preserve">
    <value>Unable to run "{0}" process.
The problem description is logged. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
  <data name="MessageToManyFiles" xml:space="preserve">
    <value>Adding this file or directory would result in a result image having a size larger than the current configured limit.</value>
  </data>
  <data name="MessageUnableToCreateLog" xml:space="preserve">
    <value>Unable to create a log file: </value>
  </data>
  <data name="MessageUnableToUseWinLog" xml:space="preserve">
    <value>Unable to write error info in Windows Application Log.</value>
  </data>
  <data name="MessageUnknownMedia" xml:space="preserve">
    <value>The media is not compatible or of unknown physical format.</value>
  </data>
  <data name="MessageUnsupportedMedia" xml:space="preserve">
    <value>The current media is not supported.</value>
  </data>
  <data name="MessageUnsupportedMultisession" xml:space="preserve">
    <value>IMAPI supports none of the multisession type(s) provided on the current media.</value>
  </data>
  <data name="TrialMessage" xml:space="preserve">
    <value>This is a trial version. Prints of only 5 photos will be actually made.</value>
  </data>
  <data name="MessageLowMemory" xml:space="preserve">
    <value>Insufficient disk space on drive {0}. 
If you see this message, please 
contact Photo Kiosk operator.</value>
  </data>
</root>