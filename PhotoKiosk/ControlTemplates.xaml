<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pk="clr-namespace:Aurigma.PhotoKiosk"
                    xmlns:Core="clr-namespace:Aurigma.PhotoKiosk.Core;assembly=Aurigma.PhotoKiosk.Core">

    <!-- Rectangle rubberband control -->
    <Style x:Key="StyleForRubberband" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="70" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="70" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="70" />
                        </Grid.RowDefinitions>

                        <Ellipse Grid.Column="0" Grid.Row="0" pk:RectangleAdorner.GripIndex="0" Style="{StaticResource RubberbandEllipseStyle}" Width="70" Height="70" />
                        <Ellipse Grid.Column="2" Grid.Row="0" pk:RectangleAdorner.GripIndex="1" Style="{StaticResource RubberbandEllipseStyle}" Width="70" Height="70" />
                        <Ellipse Grid.Column="2" Grid.Row="2" pk:RectangleAdorner.GripIndex="2" Style="{StaticResource RubberbandEllipseStyle}" Width="70" Height="70" />
                        <Ellipse Grid.Column="0" Grid.Row="2" pk:RectangleAdorner.GripIndex="3" Style="{StaticResource RubberbandEllipseStyle}" Width="70" Height="70" />
                        <Border Grid.Column="1" Grid.Row="1" Style="{StaticResource RubberbandBorderStyle}" pk:RectangleAdorner.IsRectangleControl="true" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Point control -->
    <Style x:Key="StyleForPoint" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Canvas>
                        <Polygon Style="{StaticResource PointArrowStyle}" Points="0,0 36,12 30,18 60,40 40,60 18,30 12,36 " pk:PointAdorner.IsArrowControl="true" />
                        <Ellipse Canvas.Left="30" Canvas.Top="30" Width="70" Height="70" Style="{StaticResource RubberbandEllipseStyle}" pk:PointAdorner.IsEllipseControl="true" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Backspace button template -->
    <Style TargetType="Button" x:Key="BackspaceButtonStyle" BasedOn="{StaticResource KeyboardButtonStyle}">
        <Setter Property="Width" Value="71" />
        <Setter Property="Height" Value="70" />
    </Style>

    <!-- Zero button template -->
    <Style TargetType="Button" x:Key="ShiftButtonStyle" BasedOn="{StaticResource KeyboardButtonStyle}">
        <Setter Property="Width" Value="147" />
        <Setter Property="Height" Value="70" />
    </Style>

    <!-- Space button template -->
    <Style TargetType="Button" x:Key="SpaceButtonStyle" BasedOn="{StaticResource KeyboardButtonStyle}">
        <Setter Property="Width" Value="462" />
        <Setter Property="Height" Value="70" />
    </Style>

    <!-- Paper format radion buttons template -->
    <Style x:Key="OrderParamsRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="350" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Style="{StaticResource OrderParamsButtonStyle}" Grid.Column="0" Grid.ColumnSpan="2" />
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5" Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property = "Margin" Value= "0 5 0 5" />
        <Style.Triggers>
            <Trigger Property="RadioButton.IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="350" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Style="{StaticResource OrderParamsButtonCheckedStyle}" Grid.Column="0" Grid.ColumnSpan="2" />
                                <Image Source ="{DynamicResource {x:Static Core:Constants.ImageBigCheckBoxKey}}" Margin="4, -4, 0, 0" Grid.Column="0" VerticalAlignment="Top" />
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"  Grid.Column="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ServiceCheckboxStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition MaxWidth="1200" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Style="{StaticResource OrderParamsButtonStyle}" Grid.Column="0" Grid.ColumnSpan="2" />
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5" Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property = "Margin" Value= "0 15 0 15" />
        <Style.Triggers>
            <Trigger Property="CheckBox.IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition MaxWidth="1200" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Style="{StaticResource OrderParamsButtonCheckedStyle}" Grid.Column="0" Grid.ColumnSpan="2" />
                                <Image Source ="{DynamicResource {x:Static Core:Constants.ImageBigCheckBoxKey}}" Margin="4, -4, 0, 0" Grid.Column="0" VerticalAlignment="Top" />
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"  Grid.Column="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SelectDeviceRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="600" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Style="{StaticResource SelectDeviceButtonStyle}" Grid.Column="0" Grid.ColumnSpan="2" />
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5" Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property = "Margin" Value= "0 5 0 5" />
        <Style.Triggers>
            <Trigger Property="RadioButton.IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="600" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Style="{StaticResource SelectDeviceButtonCheckedStyle}" Grid.Column="0" Grid.ColumnSpan="2" />
                                <Image Source ="{DynamicResource {x:Static Core:Constants.ImageBigCheckBoxKey}}" Margin="4, -4, 0, 0" Grid.Column="0" VerticalAlignment="Top" />
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"  Grid.Column="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Scrollbar template -->
    <ControlTemplate x:Key="DotsVerticalTemplate" TargetType="{x:Type Thumb}">
        <Border Name="Border" CornerRadius="7" Background="{StaticResource NormalBrush}">
            <Grid Width="27" Height="60">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Ellipse Grid.Column="0" Grid.Row="0" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="1" Grid.Row="0" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="2" Grid.Row="0" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="0" Grid.Row="1" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="1" Grid.Row="1" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="2" Grid.Row="1" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="0" Grid.Row="2" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="1" Grid.Row="2" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="2" Grid.Row="2" Style="{StaticResource DotStyle}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DotsHorizontalTemplate" TargetType="{x:Type Thumb}">
        <Border Name="Border" CornerRadius="7" Background="{StaticResource NormalBrush}">
            <Grid Width="60" Height="27">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Ellipse Grid.Column="0" Grid.Row="0" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="1" Grid.Row="0" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="2" Grid.Row="0" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="0" Grid.Row="1" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="1" Grid.Row="1" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="2" Grid.Row="1" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="0" Grid.Row="2" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="1" Grid.Row="2" Style="{StaticResource DotStyle}" />
                <Ellipse Grid.Column="2" Grid.Row="2" Style="{StaticResource DotStyle}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" CornerRadius="7" Background="{StaticResource NormalBrush}">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="50" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="50" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="7" Background="{StaticResource ScrollbarBackgroundBrush}" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="50" Command="ScrollBar.LineUpCommand" Content="M 0 16 L 16 16 L 8 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Template="{StaticResource DotsVerticalTemplate}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="50" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 8 16 L 16 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="50" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="50" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="7" Background="{StaticResource ScrollbarBackgroundBrush}" />
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="50" Command="ScrollBar.LineLeftCommand" Content="M 16 0 L 16 16 L 0 8 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Template="{StaticResource DotsHorizontalTemplate}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="50" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 16 8 L 0 16 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="50" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="50" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- FolderItemControl template-->
    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border SnapsToDevicePixels="true" x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>